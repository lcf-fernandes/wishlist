{"1750686851281":{"actionType":"saveAll","createdAt":"1750686851281","actionID":"1750686851281","userID":"#TEMP","path":"system.capsules.b6ac106a-fdc0-4aae-b98a-2661dd6da9ee.capsUseCodeInfo.capsUseInputs.sss_custom_caps_el-0.capsIptTxtValue","oldValue":"() => {\n  const [games, setGames] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const fetchDeals = async (filterType) => {\n    setLoading(true);\n    let url = \"https://www.cheapshark.com/api/1.0/deals?\";\n\n    switch (filterType) {\n      case \"store\":\n        url += \"storeID=1\"; // Steam por exemplo\n        break;\n      case \"lowest\":\n        url += \"sortBy=Price\";\n        break;\n      case \"discount\":\n        url += \"sortBy=Deal%20Rating\";\n        break;\n      default:\n        break;\n    }\n\n    try {\n      const res = await fetch(url);\n      const data = await res.json();\n      setGames(data);\n    } catch (error) {\n      console.error(\"Erro ao buscar dados:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <RN.View style={{ padding: 16 }}>\n      <RN.View style={{ marginBottom: 12 }}>\n        <RN.Button title=\"Menor Preço\" onPress={() => fetchDeals(\"lowest\")} />\n      </RN.View>\n\n      <RN.FlatList\n        data={games}\n        keyExtractor={(item) => item.dealID}\n        renderItem={(props) => {\n          console.log({ props });\n          const item = props.item;\n          console.log({ item });\n\n          return (\n            <RN.View>\n              <RN.Text>{item?.title}</RN.Text>\n            </RN.View>\n          );\n        }}\n      />\n    </RN.View>\n  );\n}","newValue":"() => {\n  const [games, setGames] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n\n  const fetchDeals = async (filterType) => {\n    setLoading(true);\n    let url = \"https://www.cheapshark.com/api/1.0/deals?\";\n\n    switch (filterType) {\n      case \"store\":\n        url += \"storeID=1\"; // Steam por exemplo\n        break;\n      case \"lowest\":\n        url += \"sortBy=Price\";\n        break;\n      case \"discount\":\n        url += \"sortBy=Deal%20Rating\";\n        break;\n      default:\n        break;\n    }\n\n    try {\n      const res = await fetch(url);\n      const data = await res.json();\n      setGames(data);\n    } catch (error) {\n      console.error(\"Erro ao buscar dados:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <RN.View style={{ padding: 16 }}>\n      <RN.View style={{ marginBottom: 12 }}>\n        <RN.Button title=\"Menor Preço\" onPress={() => fetchDeals(\"lowest\")} />\n      </RN.View>\n\n      <RN.FlatList\n        data={games}\n        keyExtractor={(item) => item.dealID}\n        renderItem={(props) => {\n          console.log({ props });\n          const item = props.item;\n          console.log({ item });\n\n          return (\n            <RN.View>\n              <RN.Text>{item?.title}</RN.Text>\n            </RN.View>\n          );\n        }}\n      />\n    </RN.View>\n  );\n}"}}