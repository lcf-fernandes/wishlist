{"1750691066200":{"actionType":"saveAll","createdAt":"1750691066200","actionID":"1750691066200","userID":"#TEMP","path":"system.capsules.b6ac106a-fdc0-4aae-b98a-2661dd6da9ee.capsUseCodeInfo.capsUseInputs.sss_custom_caps_el-0.capsIptTxtValue","oldValue":"() => {\n  const [games, setGames] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n\n  const fetchDeals = async (filterType) => {\n    setLoading(true);\n    let url = \"https://www.cheapshark.com/api/1.0/deals?\";\n\n    switch (filterType) {\n      case \"store\":\n        url += \"storeID=1\"; // Steam por exemplo\n        break;\n      case \"lowest\":\n        url += \"sortBy=Price\";\n        break;\n      case \"discount\":\n        url += \"sortBy=Deal%20Rating\";\n        break;\n      default:\n        break;\n    }\n\n    try {\n      const res = await fetch(url);\n      const data = await res.json();\n      setGames(data);\n    } catch (error) {\n      console.error(\"Erro ao buscar dados:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    \n\n      {loading ? (\n        <RN.ActivityIndicator size=\"large\" />\n      ) : (\n        <RN.FlatList\n          data={games}\n          keyExtractor={(item) => item.dealID}\n          renderItem={({ item }) => {\n            const price =\n              \"Preço: $\" +\n              item.salePrice +\n              \"Normal: $\" +\n              item.normalPrice +\n              \")\";\n            const discount =\n              \"Desconto:\" +\n              Math.round(\n                ((item.normalPrice - item.salePrice) / item.normalPrice) * 100\n              ) +\n              \"%\";\n\n            return (\n              <RN.View\n                style={{\n                  marginBottom: 10,\n                  padding: 10,\n                  borderWidth: 1,\n                  borderColor: \"#ccc\",\n                  borderRadius: 6,\n                }}\n              >\n                <RN.Text style={{ fontWeight: \"bold\", fontSize: 16 }}>\n                  {item.title}\n                </RN.Text>\n                <RN.Text>{price}</RN.Text>\n                <RN.Text>{discount}</RN.Text>\n              </RN.View>\n            );\n          }}\n        />\n      )}\n    </RN.View>\n  );\n}","newValue":"() => {\n  const [games, setGames] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n\n  const fetchDeals = async (filterType) => {\n    setLoading(true);\n    let url = \"https://www.cheapshark.com/api/1.0/deals?\";\n\n    switch (filterType) {\n      case \"store\":\n        url += \"storeID=1\"; // Steam por exemplo\n        break;\n      case \"lowest\":\n        url += \"sortBy=Price\";\n        break;\n      case \"discount\":\n        url += \"sortBy=Deal%20Rating\";\n        break;\n      default:\n        break;\n    }\n\n    try {\n      const res = await fetch(url);\n      const data = await res.json();\n      setGames(data);\n    } catch (error) {\n      console.error(\"Erro ao buscar dados:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <RN.View style={{ padding: 16 }}>\n      <RN.Text style={{ color: \"#FFF\", fontSize: 12 }}>Filtros:</RN.Text>\n\n      <RN.View\n        style={{\n          backgroundColor: \"#212E1F\",\n          borderRadius: \"10px\",\n          padding: \"5px\",\n          alignItems: \"center\",\n        }}\n        onPress={() => fetchDeals(\"store\")}\n      >\n        <RN.Text style={{ color: \"#FFF\", fontSize: 10 }}>Filtrar por Loja (Steam)</RN.Text>\n      </RN.View>\n\n      <RN.View\n        style={{\n          backgroundColor: \"#212E1F\",\n          borderRadius: \"10px\",\n          padding: \"5px\",\n          alignItems: \"center\",\n        }}\n        onPress={() => fetchDeals(\"lowest\")}\n      >\n        <RN.Text style={{ color: \"#FFF\", fontSize: 10 }}>Menor Preço</RN.Text>\n      </RN.View>\n\n      <RN.View\n        style={{\n          backgroundColor: \"#212E1F\",\n          borderRadius: \"10px\",\n          padding: \"5px\",\n          alignItems: \"center\",\n        }}\n        onPress={() => fetchDeals(\"discount\")}\n      >\n        <RN.Text style={{ color: \"#FFF\", fontSize: 10 }}>Maior Desconto</RN.Text>\n      </RN.View>\n\n      {loading ? (\n        <RN.ActivityIndicator size=\"large\" />\n      ) : (\n        <RN.FlatList\n          data={games}\n          keyExtractor={(item) => item.dealID}\n          renderItem={({ item }) => {\n            const price =\n              \"Preço: $\" +\n              item.salePrice +\n              \"Normal: $\" +\n              item.normalPrice +\n              \")\";\n            const discount =\n              \"Desconto:\" +\n              Math.round(\n                ((item.normalPrice - item.salePrice) / item.normalPrice) * 100\n              ) +\n              \"%\";\n\n            return (\n              <RN.View\n                style={{\n                  marginBottom: 10,\n                  padding: 10,\n                  borderWidth: 1,\n                  borderColor: \"#ccc\",\n                  borderRadius: 6,\n                }}\n              >\n                <RN.Text style={{ fontWeight: \"bold\", fontSize: 16 }}>\n                  {item.title}\n                </RN.Text>\n                <RN.Text>{price}</RN.Text>\n                <RN.Text>{discount}</RN.Text>\n              </RN.View>\n            );\n          }}\n        />\n      )}\n    </RN.View>\n  );\n}"}}