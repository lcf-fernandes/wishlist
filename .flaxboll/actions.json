{"1750687513712":{"actionType":"saveAll","createdAt":"1750687513712","actionID":"1750687513712","userID":"#TEMP","path":"system.capsules.b6ac106a-fdc0-4aae-b98a-2661dd6da9ee.capsUseCodeInfo.capsUseInputs.sss_custom_caps_el-0.capsIptTxtValue","oldValue":"() => {\n  const [games, setGames] = React.useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const fetchDeals = async (filterType) => {\n    setLoading(true);\n    let url = \"https://www.cheapshark.com/api/1.0/deals?\";\n\n    switch (filterType) {\n      case \"store\":\n        url += \"storeID=1\"; // Steam por exemplo\n        break;\n      case \"lowest\":\n        url += \"sortBy=Price\";\n        break;\n      case \"discount\":\n        url += \"sortBy=Deal%20Rating\";\n        break;\n      default:\n        break;\n    }\n\n    try {\n      const res = await fetch(url);\n      const data = await res.json();\n      setGames(data);\n    } catch (error) {\n      console.error(\"Erro ao buscar dados:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const price =\n    \"Preço: $\" + item.salePrice + \"Normal: $\" + item.normalPrice + \")\";\n\n  return (\n    <RN.View style={{ padding: 16 }}>\n      <RN.Text style={{ fontSize: 20, fontWeight: \"bold\", marginBottom: 12 }}>\n        Filtros:\n      </RN.Text>\n\n      <RN.View style={{ marginBottom: 12 }}>\n        <RN.Button\n          title=\"Filtrar por Loja (Steam)\"\n          onPress={() => fetchDeals(\"store\")}\n        />\n      </RN.View>\n\n      <RN.View style={{ marginBottom: 12 }}>\n        <RN.Button title=\"Menor Preço\" onPress={() => fetchDeals(\"lowest\")} />\n      </RN.View>\n\n      <RN.View style={{ marginBottom: 12 }}>\n        <RN.Button\n          title=\"Maior Desconto\"\n          onPress={() => fetchDeals(\"discount\")}\n        />\n      </RN.View>\n\n      {loading ? (\n        <RN.ActivityIndicator size=\"large\" />\n      ) : (\n        <RN.FlatList\n          data={games}\n          keyExtractor={(item) => item.dealID}\n          renderItem={({ item }) => (\n            <RN.View\n              style={{\n                marginBottom: 10,\n                padding: 10,\n                borderWidth: 1,\n                borderColor: \"#ccc\",\n                borderRadius: 6,\n              }}\n            >\n              <RN.Text style={{ fontWeight: \"bold\", fontSize: 16 }}>\n                {item.title}\n              </RN.Text>\n              <RN.Text>{price}</RN.Text>\n              <RN.Text>\n                Desconto:{\" \"}\n                {Math.round(\n                  ((item.normalPrice - item.salePrice) / item.normalPrice) * 100\n                )}\n                %\n              </RN.Text>\n            </RN.View>\n          )}\n        />\n      )}\n    </RN.View>\n  );\n}","newValue":"() => {\n  const [games, setGames] = React.useState([]);\n  const [loading, setLoading] = React.useState(false);\n\n  const fetchDeals = async (filterType) => {\n    setLoading(true);\n    let url = \"https://www.cheapshark.com/api/1.0/deals?\";\n\n    switch (filterType) {\n      case \"store\":\n        url += \"storeID=1\"; // Steam por exemplo\n        break;\n      case \"lowest\":\n        url += \"sortBy=Price\";\n        break;\n      case \"discount\":\n        url += \"sortBy=Deal%20Rating\";\n        break;\n      default:\n        break;\n    }\n\n    try {\n      const res = await fetch(url);\n      const data = await res.json();\n      setGames(data);\n    } catch (error) {\n      console.error(\"Erro ao buscar dados:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const price =\n    \"Preço: $\" + item.salePrice + \"Normal: $\" + item.normalPrice + \")\";\n\n  return (\n    <RN.View style={{ padding: 16 }}>\n      <RN.Text style={{ fontSize: 20, fontWeight: \"bold\", marginBottom: 12 }}>\n        Filtros:\n      </RN.Text>\n\n      <RN.View style={{ marginBottom: 12 }}>\n        <RN.Button\n          title=\"Filtrar por Loja (Steam)\"\n          onPress={() => fetchDeals(\"store\")}\n        />\n      </RN.View>\n\n      <RN.View style={{ marginBottom: 12 }}>\n        <RN.Button title=\"Menor Preço\" onPress={() => fetchDeals(\"lowest\")} />\n      </RN.View>\n\n      <RN.View style={{ marginBottom: 12 }}>\n        <RN.Button\n          title=\"Maior Desconto\"\n          onPress={() => fetchDeals(\"discount\")}\n        />\n      </RN.View>\n\n      {loading ? (\n        <RN.ActivityIndicator size=\"large\" />\n      ) : (\n        <RN.FlatList\n          data={games}\n          keyExtractor={(item) => item.dealID}\n          renderItem={({ item }) => (\n            <RN.View\n              style={{\n                marginBottom: 10,\n                padding: 10,\n                borderWidth: 1,\n                borderColor: \"#ccc\",\n                borderRadius: 6,\n              }}\n            >\n              <RN.Text style={{ fontWeight: \"bold\", fontSize: 16 }}>\n                {item.title}\n              </RN.Text>\n              <RN.Text>{price}</RN.Text>\n              <RN.Text>\n                Desconto:{\" \"}\n                {Math.round(\n                  ((item.normalPrice - item.salePrice) / item.normalPrice) * 100\n                )}\n                %\n              </RN.Text>\n            </RN.View>\n          )}\n        />\n      )}\n    </RN.View>\n  );\n}"}}